# Ultra-minimal M3 Docker image using Alpine Linux
FROM python:3.11-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    libffi-dev \
    openssl-dev \
    rust \
    cargo

# Set working directory
WORKDIR /app

# Copy dependency files
COPY pyproject.toml README.md ./
COPY src/ ./src/

# Install build tools and M3
RUN pip install --no-cache-dir build && \
    python -m build --wheel && \
    pip install --no-cache-dir dist/*.whl

# Production stage - minimal Alpine runtime
FROM python:3.11-alpine

# Install minimal runtime dependencies
RUN apk add --no-cache \
    curl \
    ca-certificates \
    libffi \
    openssl

# Create non-root user
RUN adduser -D -h /home/m3user -s /bin/sh m3user

# Copy installed package from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin/m3 /usr/local/bin/m3
COPY --from=builder /usr/local/bin/m3-mcp-server /usr/local/bin/m3-mcp-server

# Switch to non-root user
USER m3user
WORKDIR /home/m3user

# Create data directory
RUN mkdir -p /home/m3user/m3_data

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD m3 --version || exit 1

# Default command
CMD ["m3", "--help"]